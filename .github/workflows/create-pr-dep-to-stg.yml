name: Create PR deploy to staging

on:
  pull_request:
    types:
      - closed
    branches:
      - deploy
env:
  HEAD_BRANCH: deploy
  BASE_BRANCH: staging
  DISPATCH_NOTIFY_REPOSITORIES: test-notify
  DISPATCH_NOTIFY_EVENT_TYPE: test-notify
  REQUIRED_ACTION_TYPE_MERGE: auto-create-pr-merge

jobs:
  prepare-params:
    if: >
      github.event.pull_request.merged == true &&
      github.event.pull_request.head.ref != 'staging'
    runs-on: ubuntu-latest
    outputs:
      head_branch: ${{ steps.set.outputs.head_branch }}
      base_branch: ${{ steps.set.outputs.base_branch }}
    steps:
      - id: set
        run: |
          echo "head_branch=$HEAD_BRANCH" >> "$GITHUB_OUTPUT"
          echo "base_branch=$BASE_BRANCH" >> "$GITHUB_OUTPUT"

  create-pull-request:
    needs: prepare-params
    uses: ./.github/workflows/create-pull-request.yml
    with:
      head_branch: ${{ needs.prepare-params.outputs.head_branch }}
      base_branch: ${{ needs.prepare-params.outputs.base_branch }}
      pr_title: "${{ needs.prepare-params.outputs.head_branch }} -> ${{ needs.prepare-params.outputs.base_branch }} (#${{ github.event.pull_request.number }})"
      pr_body: |
        このPRは、以下のPRの変更内容を \`${{ needs.prepare-params.outputs.base_branch }}\` ブランチに反映するためのものです。

        - original pr: #${{ github.event.pull_request.number }}
        - original author: ${{ github.event.pull_request.user.login }}
    secrets:
      app_id: ${{ secrets.TANUKI_2_APP_ID }}
      app_private_key: ${{ secrets.TANUKI_2_PRIVATE_KEY }}

  request-review:
    needs: create-pull-request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.TANUKI_2_APP_ID }}
          private-key: ${{ secrets.TANUKI_2_PRIVATE_KEY }}

      - name: Request PR Review
        run: |
          REVIEWERS_JSON="{\"reviewers\":[\"${{ github.event.pull_request.user.login }}\"]}"
          curl -s -X POST \
            -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/pulls/${{ needs.create-pull-request.outputs.number }}/requested_reviewers \
            -d "$REVIEWERS_JSON"

  dispatch-notify:
    needs: create-pull-request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: dispatch-notify-token
        with:
          app-id: ${{ secrets.TANUKI_2_APP_ID }}
          private-key: ${{ secrets.TANUKI_2_PRIVATE_KEY }}
          repositories: ${{ env.DISPATCH_NOTIFY_REPOSITORIES }}

      - name: Dispatch Notify Workflow
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer ${{ steps.dispatch-notify-token.outputs.token }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ env.DISPATCH_NOTIFY_REPOSITORIES }}/dispatches \
            -d '{
              "event_type": "${{ env.DISPATCH_NOTIFY_EVENT_TYPE }}",
              "client_payload": {
                "required_action_type": "${{ env.REQUIRED_ACTION_TYPE_MERGE }}",
                "author": "${{ github.event.pull_request.user.login }}",
                "pull_request": {
                  "number": ${{ needs.create-pull-request.outputs.number }},
                  "title": "${{ needs.create-pull-request.outputs.title }}",
                  "html_url": "${{ needs.create-pull-request.outputs.html_url }}"
                }
              }
            }'
