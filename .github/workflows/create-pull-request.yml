name: Create PR

on:
  workflow_call:
    inputs:
      head_branch:
        required: true
        type: string
      base_branch:
        required: true
        type: string
      pr_title:
        required: true
        type: string
      pr_body:
        required: false
        default: ""
        type: string
      checkout_shadow_head_branch:
        required: false
        default: "true"
        type: boolean
      assignees:
        required: false
        default: ""
        type: string
    secrets:
      app_id:
        required: true
      app_private_key:
        required: true

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.create-pr.outputs.pr_number }}

    steps:
      - name: Validate branches
        run: |
          if [ "${{ inputs.head_branch }}" = "${{ inputs.base_branch }}" ]; then
            echo "Error: head_branch and base_branch must be different." >&2
            exit 1
          fi

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.app_id }}
          private-key: ${{ secrets.app_private_key }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api \"/users/${{ steps.app-token.outputs.app-slug }}[bot]\" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base_branch }}
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Set up Git config
        run: |
          git config user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Fetch head branch
        run: |
          git fetch origin ${{ inputs.head_branch }}:${{ inputs.head_branch }}

      - name: Create PR
        id: create-pr
        run: |
          if [ "${{ inputs.checkout_shadow_head_branch }}" = "true" ]; then
            SHADOW_HEAD_BRANCH=auto/${{ inputs.head_branch }}-$(date +%s)
            git checkout -b $SHADOW_HEAD_BRANCH ${{ inputs.head_branch }}
            git push origin $SHADOW_HEAD_BRANCH
            HEAD_BRANCH=$SHADOW_HEAD_BRANCH
          else
            HEAD_BRANCH=${{ inputs.head_branch }}
          fi

          PR_DATA=$(curl -s -X POST \
            -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d "$(jq -n \
              --arg title \"${{ inputs.pr_title }}\" \
              --arg head \"$HEAD_BRANCH\" \
              --arg base \"${{ inputs.base_branch }}\" \
              --arg body \"${{ inputs.pr_body }}\" \
              '{title: $title, head: $head, base: $base, body: $body}')")

          PR_NUMBER=$(echo "$PR_DATA" | jq -r .number)
          if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "null" ]; then
            echo "Failed to create PR or retrieve PR number." >&2
            exit 1
          fi
          echo "pr_number=$PR_NUMBER" >> "$GITHUB_OUTPUT"

          if [ -n "${{ inputs.assignees }}" ]; then
            curl -s -X POST \
              -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/assignees \
              -d "$(jq -n --arg assignees \"${{ inputs.assignees }}\" '{assignees: ($assignees | split(","))}')"
          fi
